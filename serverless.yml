# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: slsblogpoc # NOTE: update this with your service name

provider:
  name: aws
  runtime: nodejs4.3
# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can overwrite defaults here
#defaults:
#  stage: dev
#  region: us-east-1

# you can add packaging information here
package:
#  include:
#    - include-me.js
  exclude:
    - rust/
#  artifact: my-service-code.zip

functions:
  home:
    handler: main/handler.main
    events:
      - http:
          method: GET
          path: home
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')

  post:
    handler: page/handler.main
    events:
      - http:
          method: GET
          path: page/{id}
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')

#    you can add any of the following events
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env.BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic

# you can add CloudFormation resource templates here
resources:
  Resources:
    PostTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "postId"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "postId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        TableName: "slsblog-posts"
    TagTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: "tag"
            AttributeType: "S"
          - AttributeName: "postId"
            AttributeType: "N"
        KeySchema:
          - AttributeName: "postId"
            KeyType: "HASH"
          - AttributeName: "tag"
            KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 2
          WriteCapacityUnits: 2
        TableName: "slsblog-tags"

#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
